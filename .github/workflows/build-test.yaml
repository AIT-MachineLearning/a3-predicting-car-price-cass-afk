name: Build Test

run-name: ${{ github.actor }} Building and Testing

on:
  push:
    branches:
    - main
    paths:
    - 'app/**'
    tags:
      - 'v*'

jobs:
  # Job name
  build-test:
    runs-on: ubuntu-latest
    # Tasks, specify in list.
    steps:
         # https://github.com/actions/checkout: will clone Git into the image
      - uses: actions/checkout@v4

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
          envkey_APP_MODEL_NAME: ${{ secrets.APP_MODEL_NAME }}
          file_name: .env
          fail_on_empty: true
          sort_keys: true

      - name: Create Docker Network
        run: docker network create traefik_default || true

      - name: Build the Docker image
        run: docker compose -f app/docker-compose.yml build

      - name: Compose up
        run: docker compose -f app/docker-compose.yml up -d

      - name: Testing
        run: docker compose -f app/docker-compose.yml exec python unit_test.py test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: casschang02/ml-st125002-a3
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=latest
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}, casschang02/ml-st125002-a3:latest
  
  deploy:
      environment: Production
      needs: build-test
      runs-on: ubuntu-latest
      steps:
        - name: SSH Remote Commands
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.MLBRAIN_HOST }}
            username: ${{ secrets.USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            proxy_host: ${{ secrets.BAZOOKA_HOST }}
            proxy_username: ${{ secrets.USERNAME }}
            proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
              tag=${{ github.ref_name }} docker compose -f st125002/docker-compose.yaml down
              tag=${{ github.ref_name }} docker image rm casschang02/ml-st125002-a3 --force
              tag=${{ github.ref_name }} docker compose -f st125002/docker-compose.yaml up -d